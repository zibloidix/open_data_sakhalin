import 'package:flutter/material.dart';

List<String> datasets = [
  'Версия методических рекомендаций',
  'форма_0503317M_таблица_Доходы бюджета',
  'форма_0503317M_таблица_Расходы',
  'форма_0503317M_таблица_Источники финансирования',
  'форма_0503317M_таблица_Таблица консолидируемых расчетов',
  'Реализация Указов Президента РФ (по мероприятиям и источникам)',
  'Прогноз поступления доходов на период 2018-2020 годы',
  'Функциональная структура расходов областного бюджета на период 2018-2020 годы',
  'Общий объем и распределение бюджетных ассигнований, направляемых на государственную поддержку семьи и детей, на 2018 год',
  'Прогноз поступлений доходов на 2019-2021 годы',
  'Общий объем и распределение бюджетных ассигнований, направляемых на государственную поддержку семьи и детей, на плановый период 2020 и 2021 годов',
  'Функциональная структура расходов областного бюджета на 2019 год',
  'Сведения об использовании средств областного и федерального бюджетов, юридических и физических лиц на реализацию мероприятий государственной программы',
  'Сведения о степени реализации мероприятий государственной программы',
  'Ведомственная структура расходов областного бюджета на плановый период 2020 и 2021 годов',
  'Программная структура расходов областного бюджета на 2019 год',
  'Ведомственная структура расходов областного бюджета на 2019 год',
  'Прогноз поступлений доходов областного бюджета на 2020 год и на плановый период 2021 и 2022 годов',
  'Программную структуру расходов областного бюджета на 2020 год и на плановый период 2021 и 2022 годов',
  'Общий объем и распределение бюджетных ассигнований, направляемых на государственную поддержку семьи и детей, на 2020 год и на плановый период 2021 и 2022 годов',
  'форма_0503317M_таблица_Доходы бюджета (Анивский ГО)',
  'форма_0503317M_таблица_Источники финансирования (Анивский ГО)',
  'форма_0503317M_таблица_Расходы (Анивский ГО)',
  'форма_0503317M_таблица_Таблица консолидируемых расчетов (Анивский ГО)',
  'форма_0503317M_таблица_Доходы бюджета (Южно-Сахалинск)',
  'форма_0503317M_таблица_Расходы (Южно-Сахалинск)',
  'форма_0503317M_таблица_Источники финансирования (Южно-Сахалинск)',
  'форма_0503317M_таблица_Таблица консолидируемых расчетов (Южно-Сахалинск)',
  'Сводный отчет размещения заказов',
  'Функциональная структура расходов областного бюджета на 2020 год и на плановый период 2021 и 2022 годов',
  'Распределение бюджетных ассигнований на плановый период 2019 и 2020 годов',
  'Программная структура расходов областного бюджета на 2018 год',
  'Распределение бюджетных ассигнований на плановый период по целевым статьям 2019 и 2020 годов',
  'Ведомственная структура расходов областного бюджета на 2018 год',
  'Ведомственная структура расходов областного бюджета на плановый период 2019 и 2020 годов',
  'Общий объем и распределение бюджетных ассигнований, направляемых на государственную поддержку семьи и детей, на плановый период 2019 и 2020 годов',
  'Источники финансирования дефицита на  2020- 2021 годы',
  'Программная структура расходов областного бюджета на 2020 - 2021 годы',
  'Функциональная структура расходов областного бюджета на период 2020-2021 годы',
  'Общий объем и распределение бюджетных ассигнований, направляемых на государственную поддержку семьи и детей, на 2019  год',
  'Источники финансирования дефицита на  2019 год',
  'Источники финансирования дефицита областного бюджета на 2020 год и на плановый период 2021 и 2022 годов',
  'Ведомственную структуру расходов областного бюджета на 2020 год и на плановый период 2021 и 2022 годов',
];

class CatalogScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: LayoutBuilder(
        builder: (context, constraints) => Column(
          children: <Widget>[
            Container(
              height: 100,
              color: Colors.white,
              padding: EdgeInsets.only(left: 10, right: 10),
              child: Column(
                
                children: <Widget>[
                  SizedBox(height: 40,),
                  Container(
                    height: 45,
                    padding: EdgeInsets.symmetric(vertical: 1),
                    decoration: BoxDecoration(
                      color: Colors.white,
                      borderRadius: BorderRadius.circular(5),
                      boxShadow: [BoxShadow(
                        blurRadius: 1,
                        color: Colors.black26,
                        offset: Offset(0.0, 1.0)
                      )],
                    ),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceAround,
                      children: <Widget>[
                        IconButton(
                          icon: Icon(Icons.menu),
                          onPressed: () {},
                        ),
                        Container(
                          width: 230, 
                          child: TextField(
                            decoration: InputDecoration.collapsed(hintText: 'Поиск'),
                          )
                        ),
                        IconButton(
                          icon: Icon(Icons.tune),
                          onPressed: () {},
                        ),
                      ], 
                    ),
                  ),
                ],
              ),
            ),
            Container(
              color: Colors.white,
              height: constraints.maxHeight - 100,
              child: ListView.builder(
                itemCount: datasets.length,
                itemBuilder: (context, index) {
                  return Container(
                    padding: EdgeInsets.only(top: 5, bottom: 5),
                    color: index % 2 == 0 ? Colors.white : Colors.grey[100],
                    child: ListTile(
                      leading: Icon(Icons.folder),
                      title: Text(datasets[index]),
                      subtitle: Row(
                        children: <Widget>[
                          Text('01.12.2020'),
                        ],
                      ),
                      onTap: () => Navigator.of(context).pushNamed('/dataset'),
                    ),
                  );
                },
              ),
            ),
          ],
        ),
      ),
      
      
      
    );
  }
}